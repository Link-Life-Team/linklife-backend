// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




enum AppointmentStatus {

  APPROVED
  PENDING
  REJECTED
}
 enum Role{
  ADMIN
  CUSTOMER
 }
 enum Gender{
  FEMALE
  MALE
 }
model User {
  id              String       @id @default(uuid())
  gender        Gender?    
    email      String       @unique

  telephone      String       @unique
  fullname          String       
  password       String       
  location       String   

  roles   Role[] 
  canDonate      Boolean  @default(false) // Default value is false
  appointments   Appointment[]
   createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // One user can have multiple appointments
}

model Hospital {
  id           String        @id @default(uuid())
  name         String        
  location     String        
  appointments Appointment[] // One hospital can have multiple appointments
  events       Event[]       // One hospital can host multiple events
}

model Appointment {
  id          String            @id @default(uuid())
  date        DateTime
  status      AppointmentStatus @default(PENDING) // Default to PENDING
  userId      String
  hospitalId  String
  user        User @relation(fields: [userId], references: [id])
  hospital    Hospital @relation(fields: [hospitalId], references: [id])
}

model Event {
  id              String   @id @default(uuid())
  name            String   
  description     String   
  date           DateTime  
  startTime       DateTime 
  endTime         DateTime 
  attendantsTotal Int      
  location        String   
  hospital       Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  hospitalId      String  
}
